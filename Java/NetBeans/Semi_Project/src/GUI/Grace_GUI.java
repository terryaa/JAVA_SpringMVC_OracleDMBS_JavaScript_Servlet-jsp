/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.StringTokenizer;
import javax.swing.Timer;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import Interface.ServiceInter;
import POJO.Member;
import Class.Service;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author younghoonkim
 */
public class Grace_GUI extends javax.swing.JFrame {

    //필요 변수 선언
    //네트워크를 위한 소켓과 printwriter
    private Socket s;
    private PrintWriter pw;
    private BufferedReader br;
    //JFrame 요소
    private CardLayout card;
    //예약정보 리스트 어레이
    private ArrayList<String> reservationListArray;
    //시간과 달력을위한 변수
    private Timer timer;
    private UtilDateModel[] model;
    private JDatePanelImpl[] datePanel;
    private JDatePickerImpl[] datePicker;
    //테스트 멤버
    private Member member;
    //비즈니스 로직 클래스
    private ServiceInter service;
    
    private String id;
    boolean check=false;
            
    
    private String reserveinfo;
    private String reserveinfofull;
    private String reserveymdh;
    private String reserveTocken;
    private String reserveinfofull_admin;
    private String reserveTockenAdmin;
    private int reservememolength;
    
    private String search_id="";
    private String search_name="";

    public String getSearch_id() {
        return search_id;
    }

    public void setSearch_id(String search_id) {
        this.search_id = search_id;
    }

    public String getSearch_name() {
        return search_name;
    }

    public void setSearch_name(String search_name) {
        this.search_name = search_name;
    }
    
    

    /**
     * Creates new form Info_GUI
     */
    public Grace_GUI() {
        //서비를 위한 모든 메소드 시작
            initService();
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cardPanel = new javax.swing.JPanel();
        cardLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginpwv = new javax.swing.JPasswordField();
        loginidv = new javax.swing.JTextField();
        loginBtn = new javax.swing.JButton();
        signupBtn = new javax.swing.JButton();
        cardJoin = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        joinname = new javax.swing.JTextField();
        joinid = new javax.swing.JTextField();
        joincell1 = new javax.swing.JTextField();
        joinCheckBtn = new javax.swing.JButton();
        joinBtn = new javax.swing.JButton();
        joinBackBtn = new javax.swing.JButton();
        joinpw = new javax.swing.JPasswordField();
        joincell2 = new javax.swing.JTextField();
        joincell3 = new javax.swing.JTextField();
        cardRervation = new javax.swing.JPanel();
        reservationStatus = new javax.swing.JLabel();
        reservationDetail = new javax.swing.JLabel();
        currentYearMonthDay = new javax.swing.JLabel();
        currentTime = new javax.swing.JLabel();
        currentHourMin = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        detailedInfo = new javax.swing.JTextArea();
        reservationRefresh = new javax.swing.JButton();
        fromInfoToLogin = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Label_LoginID = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        ComboYear = new javax.swing.JComboBox<String>();
        ComboMonth = new javax.swing.JComboBox<String>();
        ComboDay = new javax.swing.JComboBox<String>();
        ComboHour = new javax.swing.JComboBox<String>();
        ComboProsedure = new javax.swing.JComboBox<String>();
        ButtonReservation = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        LabelError = new javax.swing.JLabel();
        TextFieldMemo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        TextField_Admin = new javax.swing.JTextField();
        Label_Admin = new javax.swing.JLabel();
        Button_Admin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cardPanel.setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel2.setText("PW:");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jLabel3.setText(" ID :");

        loginpwv.setText("jPasswordField1");
        loginpwv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginpwvMouseClicked(evt);
            }
        });
        loginpwv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginpwvActionPerformed(evt);
            }
        });
        loginpwv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginpwvKeyPressed(evt);
            }
        });

        loginidv.setFont(new java.awt.Font("나눔고딕", 0, 15)); // NOI18N
        loginidv.setText("아이디를 입력해주세요.");
        loginidv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginidvMouseClicked(evt);
            }
        });
        loginidv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginidvActionPerformed(evt);
            }
        });
        loginidv.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                loginidvKeyPressed(evt);
            }
        });

        loginBtn.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(153, 0, 153));
        loginBtn.setText("LOG IN");
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        signupBtn.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        signupBtn.setForeground(new java.awt.Color(153, 0, 153));
        signupBtn.setText("JOIN");
        signupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardLoginLayout = new javax.swing.GroupLayout(cardLogin);
        cardLogin.setLayout(cardLoginLayout);
        cardLoginLayout.setHorizontalGroup(
            cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLoginLayout.createSequentialGroup()
                .addContainerGap(122, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardLoginLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(loginpwv, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardLoginLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(loginidv, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cardLoginLayout.createSequentialGroup()
                        .addComponent(loginBtn)
                        .addGap(52, 52, 52)
                        .addComponent(signupBtn)))
                .addGap(139, 139, 139))
        );
        cardLoginLayout.setVerticalGroup(
            cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardLoginLayout.createSequentialGroup()
                .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardLoginLayout.createSequentialGroup()
                        .addGap(255, 255, 255)
                        .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(loginidv, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(loginpwv, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(cardLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(loginBtn)
                            .addComponent(signupBtn)))
                    .addGroup(cardLoginLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(245, Short.MAX_VALUE))
        );

        cardPanel.add(cardLogin, "cardLogin");

        jLabel4.setText("ID");

        jLabel5.setText("Name");

        jLabel6.setText("PW");

        jLabel7.setText("CellPhone");

        joinname.setText("이름을 입력하세요");
        joinname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinnameMouseClicked(evt);
            }
        });
        joinname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinnameActionPerformed(evt);
            }
        });

        joinid.setText("아이디를 입력하세요");
        joinid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                joinidMouseClicked(evt);
            }
        });
        joinid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinidActionPerformed(evt);
            }
        });

        joincell1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joincell1ActionPerformed(evt);
            }
        });

        joinCheckBtn.setText("중복체크");
        joinCheckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinCheckBtnActionPerformed(evt);
            }
        });

        joinBtn.setText("회원가입");
        joinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinBtnActionPerformed(evt);
            }
        });

        joinBackBtn.setText("뒤로");
        joinBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinBackBtnActionPerformed(evt);
            }
        });

        joinpw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinpwActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cardJoinLayout = new javax.swing.GroupLayout(cardJoin);
        cardJoin.setLayout(cardJoinLayout);
        cardJoinLayout.setHorizontalGroup(
            cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardJoinLayout.createSequentialGroup()
                .addContainerGap(528, Short.MAX_VALUE)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel7))
                .addGap(43, 43, 43)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(cardJoinLayout.createSequentialGroup()
                            .addComponent(joinpw, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))
                        .addGroup(cardJoinLayout.createSequentialGroup()
                            .addGap(0, 89, Short.MAX_VALUE)
                            .addComponent(joinBackBtn)
                            .addGap(38, 38, 38)
                            .addComponent(joinBtn))
                        .addGroup(cardJoinLayout.createSequentialGroup()
                            .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(joinname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(joinid, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(joinCheckBtn)))
                    .addGroup(cardJoinLayout.createSequentialGroup()
                        .addComponent(joincell1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(joincell2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(joincell3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(222, 222, 222))
        );
        cardJoinLayout.setVerticalGroup(
            cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardJoinLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(joinname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(joinid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joinCheckBtn))
                .addGap(27, 27, 27)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(joinpw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(joincell1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joincell2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joincell3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(cardJoinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(joinBtn)
                    .addComponent(joinBackBtn))
                .addContainerGap(344, Short.MAX_VALUE))
        );

        cardPanel.add(cardJoin, "cardJoin");

        cardRervation.setBackground(new java.awt.Color(204, 255, 255));

        reservationStatus.setFont(new java.awt.Font("Times New Roman", 3, 24)); // NOI18N
        reservationStatus.setText("예약현황");

        reservationDetail.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        reservationDetail.setText("상세예약정보");

        currentYearMonthDay.setText("currentYMD");

        currentTime.setText("현재 시간:");

        currentHourMin.setText("currentime");

        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, "", null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "이름", "예약날짜", "프로그램"
            }
        ));
        jScrollPane3.setViewportView(reservationTable);

        detailedInfo.setColumns(20);
        detailedInfo.setRows(5);
        jScrollPane2.setViewportView(detailedInfo);

        reservationRefresh.setText("예약조회");
        reservationRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationRefreshActionPerformed(evt);
            }
        });

        fromInfoToLogin.setText("뒤로");
        fromInfoToLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromInfoToLoginActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel9.setText("회원정보");

        jLabel10.setText("반갑습니다!");

        Label_LoginID.setText("Admin");

        jLabel11.setText("님");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(Label_LoginID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel9))))
                .addContainerGap(223, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label_LoginID)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(10, 10, 10)
                .addComponent(jLabel8))
        );

        jPanel2.setBackground(new java.awt.Color(51, 255, 51));

        jLabel12.setText("새로운 예약");

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        ComboYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----년도----", "2019", "2020" }));

        ComboMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----월----", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        ComboDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----일----", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        ComboDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDayActionPerformed(evt);
            }
        });

        ComboHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----예약시간----", "09", "10", "11", "12", "14", "15", "16", "17" }));

        ComboProsedure.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------시술선택------", "보톡스", "레이저", "피부관리" }));

        ButtonReservation.setText("예약하기");
        ButtonReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReservationActionPerformed(evt);
            }
        });

        jLabel13.setText("예약 일정을 정해주세요.");

        LabelError.setFont(new java.awt.Font("굴림", 1, 12)); // NOI18N

        TextFieldMemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextFieldMemoActionPerformed(evt);
            }
        });

        jLabel14.setText("메모 (20자이내)");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboProsedure, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(LabelError)
                                            .addComponent(jLabel14)
                                            .addComponent(TextFieldMemo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(40, 40, 40)
                                .addComponent(ButtonReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ComboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ComboProsedure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LabelError)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextFieldMemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ButtonReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(77, Short.MAX_VALUE))
        );

        TextField_Admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField_AdminActionPerformed(evt);
            }
        });

        Label_Admin.setText("ID입력");

        Button_Admin.setText("확인");
        Button_Admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_AdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Label_Admin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TextField_Admin, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Button_Admin, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TextField_Admin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Label_Admin))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Button_Admin)))
                .addGap(28, 28, 28)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout cardRervationLayout = new javax.swing.GroupLayout(cardRervation);
        cardRervation.setLayout(cardRervationLayout);
        cardRervationLayout.setHorizontalGroup(
            cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardRervationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fromInfoToLogin))
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addComponent(currentTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(currentYearMonthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentHourMin, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(reservationDetail))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addComponent(reservationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservationRefresh)))
                .addGap(240, 410, Short.MAX_VALUE))
        );
        cardRervationLayout.setVerticalGroup(
            cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardRervationLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reservationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reservationRefresh))
                .addGap(12, 12, 12)
                .addGroup(cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(currentTime)
                        .addComponent(currentYearMonthDay, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(currentHourMin))
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addComponent(reservationDetail)
                        .addGap(22, 22, 22)))
                .addGroup(cardRervationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addGroup(cardRervationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fromInfoToLogin)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        cardPanel.add(cardRervation, "cardReservation");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reservationRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationRefreshActionPerformed
        // TODO add your handling code here:
        
        //예약새로고침버튼을 눌렀을때 선택된 날짜에대하여 기간내의
        //예약정보를 가져온다. admin과 일반 member를 구분한다. 
        //선택된 날짜정보,priterwriter객체, 로그인되어있는 member를 변수로받는다.
        //Server로부터 새로운 정보를 보내게 만든다
        reservationListArray=new ArrayList<>();
        service.reservationListRefresh(this);
        //Server로부터 오는 새로운 정보를 처리한다.
        //initTable();
        //service.setReservationTable(this);
    }//GEN-LAST:event_reservationRefreshActionPerformed

    private void loginpwvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginpwvMouseClicked
        loginpwv.setText("");
    }//GEN-LAST:event_loginpwvMouseClicked

    private void loginpwvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginpwvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginpwvActionPerformed

    private void loginpwvKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginpwvKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            login();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_loginpwvKeyPressed

    private void loginidvMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginidvMouseClicked
        loginidv.setText("");
        loginpwv.setText("");
    }//GEN-LAST:event_loginidvMouseClicked

    private void loginidvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginidvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginidvActionPerformed

    private void loginidvKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginidvKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            loginpwv.setText("");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_loginidvKeyPressed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed

        
        login();
        
    }//GEN-LAST:event_loginBtnActionPerformed

    private void signupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupBtnActionPerformed
        // TODO add your handling code here:
        card.show(cardPanel, "cardJoin");
    }//GEN-LAST:event_signupBtnActionPerformed

    private void joinnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinnameMouseClicked
        joinname.setText("");
    }//GEN-LAST:event_joinnameMouseClicked

    private void joinnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinnameActionPerformed

    }//GEN-LAST:event_joinnameActionPerformed

    private void joinidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_joinidMouseClicked
        joinid.setText("");
    }//GEN-LAST:event_joinidMouseClicked

    private void joinidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_joinidActionPerformed

    private void joincell1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joincell1ActionPerformed

    }//GEN-LAST:event_joincell1ActionPerformed

    private void joinCheckBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinCheckBtnActionPerformed
        
        service.idCheck(this,joinid.getText());
    }//GEN-LAST:event_joinCheckBtnActionPerformed

    private void joinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinBtnActionPerformed
        
            service.join(this);
        
    }//GEN-LAST:event_joinBtnActionPerformed

    private void joinBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinBackBtnActionPerformed
        // 뒤로
        // 로그인 페이지로 이동
        card.show(cardPanel,"cardLogin");

    }//GEN-LAST:event_joinBackBtnActionPerformed

    private void joinpwActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinpwActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_joinpwActionPerformed

    private void fromInfoToLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromInfoToLoginActionPerformed
        // TODO add your handling code here:
        member=new Member();
        loginidv.setText("");
        loginpwv.setText("");
        card.show(cardPanel,"cardLogin");
    }//GEN-LAST:event_fromInfoToLoginActionPerformed

    private void Button_AdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_AdminActionPerformed

        service.idSearch(this,TextField_Admin.getText());
        // TODO add your handling code here:
    }//GEN-LAST:event_Button_AdminActionPerformed

    private void TextField_AdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField_AdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField_AdminActionPerformed

    private void TextFieldMemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextFieldMemoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextFieldMemoActionPerformed

    private void ButtonReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReservationActionPerformed

        service.makeReservation(this);

    }//GEN-LAST:event_ButtonReservationActionPerformed

    private void ComboDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboDayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grace_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grace_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grace_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grace_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grace_GUI().setVisible(true);
            }
        });
    }
    
    //선택된 항목의 상세예약정보를 가져와 GUI에보여준다.

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonReservation;
    private javax.swing.JButton Button_Admin;
    private javax.swing.JComboBox<String> ComboDay;
    private javax.swing.JComboBox<String> ComboHour;
    private javax.swing.JComboBox<String> ComboMonth;
    private javax.swing.JComboBox<String> ComboProsedure;
    private javax.swing.JComboBox<String> ComboYear;
    private javax.swing.JLabel LabelError;
    private javax.swing.JLabel Label_Admin;
    private javax.swing.JLabel Label_LoginID;
    private javax.swing.JTextField TextFieldMemo;
    private javax.swing.JTextField TextField_Admin;
    private javax.swing.JPanel cardJoin;
    private javax.swing.JPanel cardLogin;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel cardRervation;
    private javax.swing.JLabel currentHourMin;
    private javax.swing.JLabel currentTime;
    private javax.swing.JLabel currentYearMonthDay;
    private javax.swing.JTextArea detailedInfo;
    private javax.swing.JButton fromInfoToLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton joinBackBtn;
    private javax.swing.JButton joinBtn;
    private javax.swing.JButton joinCheckBtn;
    private javax.swing.JTextField joincell1;
    private javax.swing.JTextField joincell2;
    private javax.swing.JTextField joincell3;
    private javax.swing.JTextField joinid;
    private javax.swing.JTextField joinname;
    private javax.swing.JPasswordField joinpw;
    private javax.swing.JButton loginBtn;
    private javax.swing.JTextField loginidv;
    private javax.swing.JPasswordField loginpwv;
    private javax.swing.JLabel reservationDetail;
    private javax.swing.JButton reservationRefresh;
    private javax.swing.JLabel reservationStatus;
    private javax.swing.JTable reservationTable;
    private javax.swing.JButton signupBtn;
    // End of variables declaration//GEN-END:variables
 
    
    private void initService(){
        //서비스 시작
        service=new Service();
        //Test member
        member=new Member("이순신","alizimara","password","010-1111-1111");
        

        //GUI 초기화
        initComponents();
        //Table클릭시 해당 Table정보의 상세정보를 GUI출력시켜주는 메소드
        initAdditional();
        //GUI에 시간,달력을 초기화
        initClock();

        //connect to server!
        //서버에 연결하는 메소드
        initServer();
        //예약정보리스트 테이블을 업데이트하는 메소드 
       // initTable();
        
    }
    
    private void initAdditional(){
            
            //첫 카드를 로그인화면으로 설정 및 카드레이아웃 초기화
            card=(CardLayout) cardPanel.getLayout();
            card.show(cardPanel, "cardLogin");
            
            service.displayDetailedInfo(this);
    }
    
    private void initClock(){
        //달력 2개를 보여주기위한 배열초기화.
            model=new UtilDateModel[2];
            datePanel=new JDatePanelImpl[2];
            datePicker=new JDatePickerImpl[2];
            //달력 패널을 만들어 해당 패널을 Frame에 추가시킨다.
            //timer는 swing API중 하나로, 초단위의 타이머역할을한다.
            service.serviceStart(this);
        
    }
    //GUI에 날짜,시간을 표시한다.
    
    private void initServer(){
        try {
            
            s=new Socket("localhost",9999);
            pw=new PrintWriter(s.getOutputStream(),true);
            br=new BufferedReader(new InputStreamReader(s.getInputStream()));
            System.out.println("Server connected");
            
                } catch (IOException ex) {
            System.out.println("Error Log : Can't connect to the server.");
            JOptionPane.showMessageDialog(this,"Server connection fail");
        }
    }
    
    public void Action(){
       String reserveyear = (String) ComboYear.getSelectedItem();
        //년도 정보 가져오기
        String reservemonth = (String) ComboMonth.getSelectedItem();
        //월 정보 가져오기
        String reserveday = (String) ComboDay.getSelectedItem();
        //일 정보 가져오기
        String reservehour = (String) ComboHour.getSelectedItem();
        //시간 정보 가져오기
        String reserveprosedure = (String) ComboProsedure.getSelectedItem();
        //시술 정보 가져오기
        String reservememo = (String) TextFieldMemo.getText();
        
        reservememolength = reservememo.length();
        
        String reserveAdminTypeId = (String) TextField_Admin.getText();
        
        reserveinfo = (String) reserveyear +"/"+ reservemonth +"/"+ reserveday +"/"+ reservehour +":"+ reserveprosedure;
        //예약 정보(Full) 가져오기
        reserveinfofull = (String) member.getId() + ":" +member.getName()+":"
                + reserveyear +"/"+ reservemonth +"/"+ reserveday +"/"+ reservehour 
                +":"+ reserveprosedure +":"+ reservememo;
        //여기고쳐야
        reserveinfofull_admin = (String) this.search_id + ":" + this.search_name+":"+
                reserveyear +"/"+ reservemonth +"/"+ reserveday +"/"+ 
                reservehour +":"+ reserveprosedure +":"+ reservememo ;
                
        reserveymdh = (String) reserveyear + "/" + reservemonth + "/" + reserveday +"/" + reservehour;
        //예약 년월일시간 가져오기
        
       reserveTocken = reserveymdh + "^" +reserveinfofull;
       reserveTockenAdmin = reserveymdh + "^" + reserveinfofull_admin;
}


    
    
//    public void initTable(){
//        
////        new Thread(() -> {
////            try {
////                Socket s;
////                s=new Socket("localhost",9999);
////                reservationListArray=new ArrayList<>();
////                DefaultTableModel dtm = (DefaultTableModel) reservationTable.getModel();
////                BufferedReader br=new BufferedReader
////                        (new InputStreamReader(s.getInputStream()));
////                while(true){
////                    String readLine=br.readLine();
////                    if(!readLine.equals("")){
////                    StringTokenizer st=new StringTokenizer(readLine,"^");
////                    String str=st.nextToken();
////                    if(str.equals("date"))
////                    {
////                        StringTokenizer st1=new StringTokenizer(st.nextToken(),"\n");
////                        
////                        
////                        while(st1.hasMoreTokens())
////                        {
////                            reservationListArray.add(st1.nextToken());
////                            
////                            
////                            for(int col=0;col<reservationListArray.size();col++){
////                                StringTokenizer st2=new StringTokenizer(
////                                        reservationListArray.get(col),":");
////                                st2.nextToken();
////                                
////                                dtm.setRowCount(reservationListArray.size());
////                                //reservationTable.se
////                                for(int row=0;row<3;row++)
////                                {
////                                    reservationTable.setValueAt(st2.nextToken(), col, row);
////                                }
////                            }
////                            
////                        }
////                    }
////                    else if(str.contains("login")||str.contains("join")||
////                            str.contains("id_check")||str.contains("make")
////                            ||str.contains("id_search")||str.contains("duplication")){
////                        System.out.println("no data to fetch");
////                    }
////                    else{
////                          System.out.println("no data to fetch");
////                        dtm.setRowCount(0);
////                    }
////                    }
////
////                }
////            } catch (IOException ex) {
////                System.out.println("Data transmission failed from Server");
////            }finally{
////            }
////            
////        }).start();
//        
//        try {
//                Socket s;
//                s=new Socket("localhost",9999);
//                reservationListArray=new ArrayList<>();
//                DefaultTableModel dtm = (DefaultTableModel) reservationTable.getModel();
//                BufferedReader br=new BufferedReader
//                        (new InputStreamReader(s.getInputStream()));
//                while(true){
//                    String readLine=br.readLine();
//                    if(!readLine.equals("")){
//                    StringTokenizer st=new StringTokenizer(readLine,"^");
//                    String str=st.nextToken();
//                    if(str.equals("date"))
//                    {
//                        StringTokenizer st1=new StringTokenizer(st.nextToken(),"\n");
//                        
//                        
//                        while(st1.hasMoreTokens())
//                        {
//                            reservationListArray.add(st1.nextToken());
//                            
//                            
//                            for(int col=0;col<reservationListArray.size();col++){
//                                StringTokenizer st2=new StringTokenizer(
//                                        reservationListArray.get(col),":");
//                                st2.nextToken();
//                                
//                                dtm.setRowCount(reservationListArray.size());
//                                //reservationTable.se
//                                for(int row=0;row<3;row++)
//                                {
//                                    reservationTable.setValueAt(st2.nextToken(), col, row);
//                                }
//                            }
//                            
//                        }
//                    }
//                    else if(str.contains("login")||str.contains("join")||
//                            str.contains("id_check")||str.contains("make")
//                            ||str.contains("id_search")||str.contains("duplication")){
//                        System.out.println("no data to fetch");
//                    }
//                    else{
//                          System.out.println("no data to fetch");
//                        dtm.setRowCount(0);
//                    }
//                    }
//
//                }
//            } catch (IOException ex) {
//                System.out.println("Data transmission failed from Server");
//            }finally{
//            }
//    }
    
    public ArrayList<String> getReservationListArray() {
        return reservationListArray;
    }

    public void setReservationListArray(ArrayList<String> reservationListArray) {
        this.reservationListArray = reservationListArray;
    }

    public UtilDateModel[] getModel() {
        return model;
    }

    public void setModel(UtilDateModel[] model) {
        this.model = model;
    }

    public JPanel getCardLogin() {
        return cardLogin;
    }

    public void setCardLogin(JPanel cardLogin) {
        this.cardLogin = cardLogin;
    }

    public JLabel getCurrentHourMin() {
        return currentHourMin;
    }

    public void setCurrentHourMin(JLabel currentHourMin) {
        this.currentHourMin = currentHourMin;
    }

    public JLabel getCurrentTime() {
        return currentTime;
    }

    public void setCurrentTime(JLabel currentTime) {
        this.currentTime = currentTime;
    }

    public JLabel getCurrentYearMonthDay() {
        return currentYearMonthDay;
    }

    public void setCurrentYearMonthDay(JLabel currentYearMonthDay) {
        this.currentYearMonthDay = currentYearMonthDay;
    }

    public JTextArea getDetailedInfo() {
        return detailedInfo;
    }

    public void setDetailedInfo(JTextArea detailedInfo) {
        this.detailedInfo = detailedInfo;
    }

    public JLabel getReservationStatus() {
        return reservationStatus;
    }

    public void setReservationStatus(JLabel reservationStatus) {
        this.reservationStatus = reservationStatus;
    }

    public JTable getReservationTable() {
        return reservationTable;
    }

    public void setReservationTable(JTable reservationTable) {
        this.reservationTable = reservationTable;
    }

    private void login(){
        service.login(this);
    }
   

    public PrintWriter getPw() {
        return pw;
    }

    public void setPw(PrintWriter pw) {
        this.pw = pw;
    }

    public CardLayout getCard() {
        return card;
    }

    public void setCard(CardLayout card) {
        this.card = card;
    }

    public Member getMember() {
        return member;
    }

    public void setMember(Member member) {
        this.member = member;
    }

    public JTextField getLoginidv() {
        return loginidv;
    }

    public void setLoginidv(JTextField loginidv) {
        this.loginidv = loginidv;
    }

    public JPasswordField getLoginpwv() {
        return loginpwv;
    }

    public void setLoginpwv(JPasswordField loginpwv) {
        this.loginpwv = loginpwv;
    }

    public Socket getS() {
        return s;
    }

    public void setS(Socket s) {
        this.s = s;
    }

    public Timer getTimer() {
        return timer;
    }

    public void setTimer(Timer timer) {
        this.timer = timer;
    }

    public JDatePanelImpl[] getDatePanel() {
        return datePanel;
    }

    public void setDatePanel(JDatePanelImpl[] datePanel) {
        this.datePanel = datePanel;
    }

    public JDatePickerImpl[] getDatePicker() {
        return datePicker;
    }

    public void setDatePicker(JDatePickerImpl[] datePicker) {
        this.datePicker = datePicker;
    }

    public JPanel getCardPanel() {
        return cardPanel;
    }

    public void setCardPanel(JPanel cardPanel) {
        this.cardPanel = cardPanel;
    }

    public JPanel getCardRervation() {
        return cardRervation;
    }

    public void setCardRervation(JPanel cardRervation) {
        this.cardRervation = cardRervation;
    }
    

    public JButton getJoinBackBtn() {
        return joinBackBtn;
    }

    public void setJoinBackBtn(JButton joinBackBtn) {
        this.joinBackBtn = joinBackBtn;
    }

    public JButton getJoinBtn() {
        return joinBtn;
    }

    public void setJoinBtn(JButton joinBtn) {
        this.joinBtn = joinBtn;
    }

    public JButton getJoinCheckBtn() {
        return joinCheckBtn;
    }

    public void setJoinCheckBtn(JButton joinCheckBtn) {
        this.joinCheckBtn = joinCheckBtn;
    }

    public JTextField getJoincell1() {
        return joincell1;
    }

    public void setJoincell1(JTextField joincell1) {
        this.joincell1 = joincell1;
    }

    public JTextField getJoincell2() {
        return joincell2;
    }

    public void setJoincell2(JTextField joincell2) {
        this.joincell2 = joincell2;
    }

    public JTextField getJoincell3() {
        return joincell3;
    }

    public void setJoincell3(JTextField joincell3) {
        this.joincell3 = joincell3;
    }

    public JTextField getJoinid() {
        return joinid;
    }

    public void setJoinid(JTextField joinid) {
        this.joinid = joinid;
    }

    public JTextField getJoinname() {
        return joinname;
    }

    public void setJoinname(JTextField joinname) {
        this.joinname = joinname;
    }

    public JPasswordField getJoinpw() {
        return joinpw;
    }

    public void setJoinpw(JPasswordField joinpw) {
        this.joinpw = joinpw;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public boolean isCheck() {
        return check;
    }

    public void setCheck(boolean check) {
        this.check = check;
    }

    public JButton getButton_Admin() {
        return Button_Admin;
    }

    public void setButton_Admin(JButton Button_Admin) {
        this.Button_Admin = Button_Admin;
    }
        public String getReserveinfo() {
        return reserveinfo;
    }

    public void setReserveinfo(String reserveinfo) {
        this.reserveinfo = reserveinfo;
    }

    public String getReserveinfofull() {
        return reserveinfofull;
    }

    public void setReserveinfofull(String reserveinfofull) {
        this.reserveinfofull = reserveinfofull;
    }

    public String getReserveymdh() {
        return reserveymdh;
    }

    public void setReserveymdh(String reserveymdh) {
        this.reserveymdh = reserveymdh;
    }

    public String getReserveTocken() {
        return reserveTocken;
    }

    public void setReserveTocken(String reserveTocken) {
        this.reserveTocken = reserveTocken;
    }

    public String getReserveinfofull_admin() {
        return reserveinfofull_admin;
    }

    public void setReserveinfofull_admin(String reserveinfofull_admin) {
        this.reserveinfofull_admin = reserveinfofull_admin;
    }

    public String getReserveTockenAdmin() {
        return reserveTockenAdmin;
    }

    public JLabel getLabelError() {
        return LabelError;
    }

    public void setLabelError(JLabel LabelError) {
        this.LabelError = LabelError;
    }

    public JLabel getLabel_Admin() {
        return Label_Admin;
    }

    public void setLabel_Admin(JLabel Label_Admin) {
        this.Label_Admin = Label_Admin;
    }

    public JLabel getLabel_LoginID() {
        return Label_LoginID;
    }

    public void setLabel_LoginID(JLabel Label_LoginID) {
        this.Label_LoginID = Label_LoginID;
    }

    public JTextField getTextFieldMemo() {
        return TextFieldMemo;
    }

    public void setTextFieldMemo(JTextField TextFieldMemo) {
        this.TextFieldMemo = TextFieldMemo;
    }

    public JTextField getTextField_Admin() {
        return TextField_Admin;
    }

    public void setTextField_Admin(JTextField TextField_Admin) {
        this.TextField_Admin = TextField_Admin;
    }

    public void setReserveTockenAdmin(String reserveTockenAdmin) {
        this.reserveTockenAdmin = reserveTockenAdmin;
    }

    public int getReservememolength() {
        return reservememolength;
    }

    public void setReservememolength(int reservememolength) {
        this.reservememolength = reservememolength;
    }

    public BufferedReader getBr() {
        return br;
    }

    public void setBr(BufferedReader br) {
        this.br = br;
    }


    
 
}